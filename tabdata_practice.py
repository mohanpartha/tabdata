# -*- coding: utf-8 -*-
"""tabdata_practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NiRW2CGGdxdF_KURZEhGelDEZLE4_201
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# %matplotlib inline

import tensorflow as tf
print("TensorFlow version:", tf.__version__)

from tensorflow import keras
from keras import layers

from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder, StandardScaler, MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.pipeline import make_pipeline
from sklearn.compose import make_column_transformer

from keras.callbacks import EarlyStopping
from keras.models import Sequential
from keras.layers import Dense, Dropout

from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OneHotEncoder, StandardScaler, MinMaxScaler

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.pipeline import make_pipeline
from sklearn.compose import make_column_transformer

from google.colab import drive
drive.mount('/content/drive')

train_df = pd.read_csv('/content/drive/My Drive/data/Raman_DNA/train.csv',sep=',')
submission_df = pd.read_csv('/content/drive/My Drive/data/Raman_DNA/sample_submission.csv',sep=',')
test_df = pd.read_csv('/content/drive/My Drive/data/Raman_DNA/test.csv',sep=',')

train_df.head()

test_df.head()

print('Missing Values in Train data: ', train_df.isna().any().sum())
print('Missing Values in Test data: ',test_df.isna().any().sum())

train_df.target.unique()

train_df.shape

X = train_df.copy()
y = X.pop('target')

y_train = train_df['target']
X_train = train_df.drop(['row_id','target'], axis=1)

# encode class values as integers
le = LabelEncoder()
y_train = le.fit_transform(y_train)
le.classes_

y_train

train_df.drop_duplicates(inplace = True)

y_train

X.shape

y = le.transform(.target)

y = le.transform(train_df.target)

y.shape

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

model = RandomForestRegressor(n_estimators=30, min_samples_leaf=5)

test_df.head()
X_test = test_df.drop('row_id', axis=1)

model.fit(X, y)

np.sqrt(mean_squared_error(y, model.predict(X_)))



y_pred = model.predict(X_test)
y_pred = np.argmax(y_pred, axis = 1)
y_pred = le.inverse_transform(y_pred)
y_pred



submission_df['target'] = y_pred
submission_df.to_csv('/content/drive/My Drive/data/Raman_DNA/sample_submission_2.csv', index=False)

